networks:
  main:    

services:
  app:
    build: 
      dockerfile: ./Dockerfile
    image: minitwit_image
    container_name: app
    volumes:
      - sqliteDB:/minitwit/tmp
    ports:
      - 8000:8000
    networks:
      - main
    depends_on:
      - grafana
      - prometheus

  prometheus:
    build: 
      dockerfile: ./Dockerfile
      context: ./.infrastructure/prometheus
    image: prometheus_image
    container_name: prometheus
    ports:
      - "9090:9090"
    networks:
      - main

  alloy:
    build: 
      dockerfile: ./Dockerfile
      context: ./.infrastructure/alloy
    image: alloy_image
    container_name: alloy 
    ports: 
      - 12345:12345
      - 4317:4317
      - 4318:4318
    volumes:
      - ./.infrastructure/alloy/alloy-config.alloy:/etc/alloy/alloy-config.alloy
      - /var/run/docker.sock:/var/run/docker.sock
    command: run --server.http.listen-addr=0.0.0.0:12345 --storage.path=/var/lib/alloy/data /etc/alloy/alloy-config.alloy
    depends_on:
      - app
    networks:
      - main
  
  loki:
    build: 
      dockerfile: ./Dockerfile
      context: ./.infrastructure/loki
    image: loki_image
    container_name: loki
    ports: 
      - "3100:3100"
    volumes:
      - ./.infrastructure/loki/loki-config.yaml:/etc/loki/local-config.yaml
    command: -config.file=/etc/loki/local-config.yaml
    networks:
      - main  

  grafana:
    build: 
      dockerfile: ./Dockerfile
      context: ./.infrastructure/grafana
    image: grafana_image
    container_name: grafana
    ports:
      - "3000:3000"  
    environment:
      - PROMETHEUS_HOST=prometheus:9090
      - LOKI_HOST=loki:3100
    networks:
      - main
    volumes:
      - grafana-storage:/var/lib/grafana

volumes:
  sqliteDB:
  grafana-storage: {}