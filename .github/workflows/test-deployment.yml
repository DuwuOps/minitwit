---
  name: Test Deployment
  
  on:
    push:
      # Run workflow every time something is pushed to this branch (for testing reasons)
      tags:        
        - 'test-env*'
  
  jobs:
    tests:
      name: Tests
      runs-on: ubuntu-latest

      steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker Container
        run: |
          docker compose up -d
  
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pytest Requests
  
      - name: Test with refactored_minitwit_tests.py
        run: |
          pytest refactored_minitwit_tests.py
  
      - name: Test with sim_api_test.py
        run: |
          pytest sim_api_test.py
  
      - name: Destroy Docker artifacts after tests
        run: |
          docker compose down -v --rmi local
    push:
      name: Build & Push
      runs-on: ubuntu-latest

      steps:
        - name: Checkout
          uses: actions/checkout@v4

        - name: Copy docker-compose files to server
          uses: appleboy/scp-action@master
          with:
            host: ${{ vars.TEST_ENV_SSH_HOST }}
            username: ${{ vars.SSH_USER }}
            key: ${{ secrets.TEST_ENV_SSH_SECRET_KEY }}
            source: "docker-compose.yml,docker-compose.deploy.yml"
            target: "~/.deploy/${{ github.event.repository.name }}/"

        - name: Login to Docker Hub
          uses: docker/login-action@v3
          with:
            username: ${{ vars.DOCKER_USERNAME }}
            password: ${{ secrets.DOCKER_PASSWORD }}

        - name: Set up Docker Buildx
          uses: docker/setup-buildx-action@v3

        - name: Build and Push Docker image
          uses: docker/bake-action@v3
          env:
            DOCKER_USERNAME: ${{ vars.DOCKER_USERNAME }}
          with:
            load: true
            push: true
            files: |
              docker-compose.yml
            set: |
              *.cache-to=type=gha,mode=max
              *.cache-from=type=gha

  
    deploy:
      name: Deploy to DigitalOcean
      runs-on: ubuntu-latest
      needs: push

      steps:
        - name: Configure SSH
          run: |
            mkdir -p ~/.ssh/
            echo "$TEST_ENV_SSH_SECRET_KEY" > ~/.ssh/id_do_test_env_rsa
            chmod 600 ~/.ssh/id_do_test_env_rsa
          env:
            TEST_ENV_SSH_SECRET_KEY: ${{ secrets.TEST_ENV_SSH_SECRET_KEY }}

        - name: Deploy using Docker Compose
          uses: appleboy/ssh-action@master
          with:
            host: ${{ vars.TEST_ENV_SSH_HOST }}
            username: ${{ vars.SSH_USER }}
            key: ${{ secrets.TEST_ENV_SSH_SECRET_KEY }}
            script: |
              cd ~/.deploy/${{ github.event.repository.name }}
              DOCKER_USERNAME=${{ vars.DOCKER_USERNAME }} docker compose \
                -f docker-compose.yml \
                -f docker-compose.deploy.yml \
                up -d --pull always

        - name: Check running Docker containers
          uses: appleboy/ssh-action@master
          with:
            host: ${{ vars.TEST_ENV_SSH_HOST }}
            username: ${{ vars.SSH_USER }}
            key: ${{ secrets.TEST_ENV_SSH_SECRET_KEY }}
            script: |
              docker ps
